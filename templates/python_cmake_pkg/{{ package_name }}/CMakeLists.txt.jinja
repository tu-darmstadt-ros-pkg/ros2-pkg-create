cmake_minimum_required(VERSION 3.8)
project({{ package_name }})

# Default to C++17
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 17)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
{% if has_reconfigurable_params or is_lifecycle %}
find_package(hector_ros2_utils REQUIRED)
{% endif %}
find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
{% if has_action_server %}
find_package(rclcpp_action REQUIRED)
find_package({{ package_name }}_msgs REQUIRED)
{% endif %}
find_package(std_msgs REQUIRED)
{% if has_service_server %}
find_package(std_srvs REQUIRED)
{% endif %}
{% if use_venv %}
find_package(ament_index_cpp REQUIRED)
find_package(ros2_venv_scripts REQUIRED)
{% endif %}

# Install Python modules
ament_python_install_package(${PROJECT_NAME})

# Install Python executables
install(PROGRAMS {{package_name}}/{{node_name}}.py
        DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY config launch
  DESTINATION share/${PROJECT_NAME}
  OPTIONAL
)

{% if use_venv %}
set(SKIP_VENV
    ON
    CACHE
      BOOL
      "Whether to skip the venv setup. Should be True for distribution builds.")

if(SKIP_VENV)
  message(STATUS "Skipping venv setup")
else()
  ament_index_get_resource(venv_util_scripts_path "ros2_venv_utility_scripts"
                           "ros2_venv_scripts")
  install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/requirements.txt"
          DESTINATION "venv")
  install(SCRIPT "${venv_util_scripts_path}/post_install_venv.cmake")
endif()
{% endif %}

# ament_export_dependencies(${DEPENDENCIES})

ament_package()