stages:
  - linting
  - build_and_test

variables:
  ROS_DISTRO: {{ ros_distro }}

linting:
  stage: linting
  image: ubuntu:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
  before_script:
    - apt-get update && apt-get install -y clang-format cppcheck libxml2-utils black
  script:
    - echo "Linting C++ code..."
    - clang-format -Werror -n -style=file $(find . -name '*.cpp' -o -name '*.hpp' -o -name '*.h' -o -name '*.c' -o -name '*.cc')
    - echo "Running cppcheck on C++ code..."
    - cppcheck --force --quiet --inline-suppr --error-exitcode=1 --language=c++ $(find . -name '*.cpp' -o -name '*.hpp' -o -name '*.h' -o -name '*.c' -o -name '*.cc')
    - echo "Validating package.xml..."
    - xmllint --noout --schema http://download.ros.org/schema/package_format3.xsd $(find . -name 'package.xml')
    - echo "Linting Python files..."
    - black --check .

build-and-test:
  stage: build_and_test
  image: $CI_REGISTRY/hector/workspace/docker_workspace:dev-amd64
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
  before_script:
    - sudo apt-get update && sudo apt-get install -y python3-colcon-common-extensions python3-rosdep
    - rosdep update --rosdistro ${ROS_DISTRO}
  script:
    - echo "Installing dependencies..."
    - rosdep install --from-paths . --ignore-src -r -y
    - source /opt/ros/jazzy/setup.bash && source /opt/hector/jazzy/setup.bash
    - echo "Building packages..."
    - colcon build
    - echo "Running tests..."
    - colcon test  || FAILED=1
    - colcon test-result --verbose
    - if [ $FAILED ]; then exit 1; fi
  needs:
    - linting