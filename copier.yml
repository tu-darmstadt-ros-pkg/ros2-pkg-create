_subdirectory: "templates/{{ template }}"

_envops:
  lstrip_blocks: true
  trim_blocks: true

template:
  help: Template
  type: str
  default: cpp_pkg
  choices: [cpp_pkg, msgs_pkg, python_pkg, launch_pkg, ci]

package_name:
  help: Package name
  type: str
  placeholder: "{{ template }}"
  validator: "{% if not package_name %}Package name is required{% endif %}"
  when: "{{ 'pkg' in template }}"

description:
  help: Description
  type: str
  default: TODO
  when: "{{ 'pkg' in template }}"

maintainer:
  help: Maintainer
  type: str
  default: "{% if user_name_git %}{{ user_name_git }}{% else %}Todo{% endif %}"
  when: "{{ 'pkg' in template }}"

maintainer_email:
  help: Maintainer email
  type: str
  default: "{% if user_email_git %}{{ user_email_git }}{% else %}{{ maintainer | lower | replace(' ', '.') }}@TODO.com{% endif %}"
  when: "{{ 'pkg' in template }}"

author:
  help: Author
  type: str
  default: "{{ maintainer }}"
  when: "{{ 'pkg' in template }}"

author_email:
  help: Author email
  type: str
  default: "{% if maintainer == author %}{{ maintainer_email }}{% else %}{{ author | lower | replace(' ', '.') }}@TODO.com{% endif %}"
  when: "{{ 'pkg' in template }}"

license:
  help: License
  type: str
  default: TODO
  choices: [TODO, Apache-2.0, BSL-1.0, BSD-2.0, BSD-2-Clause, BSD-3-Clause, GPL-3.0-only, LGPL-2.1-only, LGPL-3.0-only, MIT, MIT-0]
  when: "{{ 'pkg' in template }}"

node_name:
  help: Node name
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: str
  default: "{{ package_name }}"

node_class_name:
  help: Class name of node
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: str
  default: "{{ node_name.replace('_', ' ').replace('-', ' ').title().replace(' ', '') }}"

is_component:
  help: Make it a component?
  when: "{{ template == 'cpp_pkg' }}"
  type: bool
  default: false

is_lifecycle:
  help: Make it a lifecycle node?
  when: "{{ template == 'cpp_pkg' }}"
  type: bool
  default: false

has_launch_file:
  help: Add a launch file?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

launch_file_type:
  help: Type of launch file
  when: "{{ ((template == 'cpp_pkg' or template == 'python_pkg') and has_launch_file) or template == 'launch_pkg' }}" 
  type: str
  default: yml
  choices: [py, xml, yml]

has_params:
  help: Add parameter loading?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

param_types:
  type: str
  help: Reconfigurable or startup parameters?
  when: "{{ has_params }}"
  default: []
  choices:
    - reconfigurable
    - startup
  multiselect: true

has_reconfigurable_params:
  when: "{{ false }}"
  type: bool
  default: "{{ 'reconfigurable' in param_types }}"

has_startup_params:
  when: "{{ false }}"
  type: bool
  default: "{{ 'startup' in param_types }}"

has_subscriber:
  help: Add a subscriber?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

has_publisher:
  help: Add a publisher?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

has_service_server:
  help: Add a service server?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

has_action_server:
  help: Add an action server?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

has_timer:
  help: Add a timer callback?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  type: bool
  default: false

auto_shutdown:
  help: Automatically shutdown the node after launch (useful in CI/CD)?
  when: "{{ template == 'cpp_pkg' or template == 'python_pkg' }}"
  when: false
  type: bool
  default: false

interface_types:
  help: Interfaces types
  when: "{{ template == 'msgs_pkg' }}"
  type: str
  default: [msg, srv, action]
  choices:
    Message: msg
    Service: srv
    Action: action
  multiselect: true

msg_name:
  help: Message name
  when: "{{ template == 'msgs_pkg' and 'msg' in interface_types }}"
  type: str
  default: Message

srv_name:
  help: Service name
  when: "{{ template == 'msgs_pkg' and 'srv' in interface_types }}"
  type: str
  default: Service

action_name:
  help: Action name
  when: "{{ template == 'msgs_pkg' and 'action' in interface_types }}"
  type: str
  default: Action

ci_type:
  help: CI type
  type: str
  default: "{% if git_provider %}{{ git_provider }}{% else %}gitlab{% endif %}"
  choices: [github, gitlab]
  when: "{{ 'ci' in template }}"

add_pre_commit:
  help: Add pre-commit hooks?
  default: false
  type: bool
  when: "{{ 'ci' in template }}"

default_branch:
  help: Default branch
  type: str
  default: main
  when: "{{ 'ci' in template and ci_type == 'github' }}"

ros_distro:
  help: ROS distro
  type: str
  default: "{{ ros_distro }}"
  choices: [galactic, foxy, humble, jazzy, rolling]
  when: "{{ not ros_distro }}"

launch_name:
  help: Launch file name
  when: "{{ template == 'launch_pkg' }}"
  type: str
  default: launch